apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ manifest_vars.wait_job_service_account }}
  namespace: {{ manifest_vars.wait_job_namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nimcache-reader
  namespace: {{ manifest_vars.wait_job_namespace }}
rules:
- apiGroups: ["apps.nvidia.com"]
  resources: ["nimcaches"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nimcache-reader-binding
  namespace: {{ manifest_vars.wait_job_namespace }}
subjects:
- kind: ServiceAccount
  name: {{ manifest_vars.wait_job_service_account }}
  namespace: {{ manifest_vars.wait_job_namespace }}
roleRef:
  kind: Role
  name: nimcache-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ manifest_vars.wait_job_name }}
  namespace: {{ manifest_vars.wait_job_namespace }}
spec:
  backoffLimit: 0
  activeDeadlineSeconds: {{ manifest_vars.wait_job_timeout }}
  template:
    spec:
      serviceAccountName: {{ manifest_vars.wait_job_service_account }}
      containers:
      - name: wait
        image: bitnami/kubectl:latest
        command: 
        - /bin/sh
        - -c
        - |
          echo "Waiting for NIMCache {{ manifest_vars.wait_job_target_cache }} to be ready..."
          until kubectl get nimcache {{ manifest_vars.wait_job_target_cache }} -n {{ manifest_vars.wait_job_namespace }} -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' | grep -q "True"; do
            echo "NIMCache not ready yet, waiting {{ manifest_vars.wait_job_check_interval }} seconds..."
            sleep {{ manifest_vars.wait_job_check_interval }}
          done
          echo "NIMCache is ready!"
      restartPolicy: Never
