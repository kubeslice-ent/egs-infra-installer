---
# Collect Kubernetes cluster information for summary
- name: Initialize cluster summary variables
  set_fact:
    processed_nodes: []
    processed_system_pods: []
  delegate_to: localhost

- name: Create temporary directory for kubeconfig
  tempfile:
    state: directory
    suffix: kubeconfig
  register: temp_kubeconfig_dir
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Set temporary directory permissions
  file:
    path: "{{ temp_kubeconfig_dir.path }}"
    mode: '0700'
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Get source kubeconfig file stats
  stat:
    path: "{{ global_kubeconfig }}"
  register: kubeconfig_source_stat
  become: true
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Debug source kubeconfig
  debug:
    msg: 
      - "Source kubeconfig exists: {{ kubeconfig_source_stat.stat.exists | default(false) }}"
      - "Source kubeconfig path: {{ global_kubeconfig }}"
      - "Source kubeconfig permissions: {{ kubeconfig_source_stat.stat.mode | default('unknown') }}"
  when: kubeconfig_source_stat is defined
  delegate_to: localhost

- name: Read kubeconfig content
  slurp:
    src: "{{ global_kubeconfig }}"
  register: kubeconfig_content
  become: true
  when: 
    - global_kubeconfig is defined
    - kubeconfig_source_stat.stat.exists | default(false)
  delegate_to: localhost

- name: Write kubeconfig to temporary location
  copy:
    content: "{{ kubeconfig_content.content | b64decode }}"
    dest: "{{ temp_kubeconfig_dir.path }}/config"
    mode: '0600'
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  when: 
    - global_kubeconfig is defined
    - kubeconfig_content is defined
  delegate_to: localhost

- name: Verify kubeconfig exists
  stat:
    path: "{{ temp_kubeconfig_dir.path }}/config"
  register: kubeconfig_stat
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Debug kubeconfig existence
  debug:
    msg: 
      - "Temporary kubeconfig exists: {{ kubeconfig_stat.stat.exists | default(false) }}"
      - "Temporary kubeconfig path: {{ temp_kubeconfig_dir.path }}/config"
      - "Temporary kubeconfig permissions: {{ kubeconfig_stat.stat.mode | default('unknown') }}"
  when: kubeconfig_stat is defined
  delegate_to: localhost

- name: Set temporary kubeconfig path
  set_fact:
    temp_kubeconfig: "{{ temp_kubeconfig_dir.path }}/config"
  when: 
    - global_kubeconfig is defined
    - kubeconfig_stat.stat.exists | default(false)
  delegate_to: localhost

- name: Get cluster nodes
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    kubeconfig: "{{ temp_kubeconfig }}"
  register: k8s_nodes
  ignore_errors: true
  when: 
    - global_kubeconfig is defined
    - kubeconfig_stat.stat.exists | default(false)
  delegate_to: localhost

- name: Get system pods status
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: kube-system
    kubeconfig: "{{ temp_kubeconfig }}"
  register: k8s_system_pods
  ignore_errors: true
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Get cluster info
  kubernetes.core.k8s_cluster_info:
    kubeconfig: "{{ temp_kubeconfig }}"
  register: k8s_cluster_info
  ignore_errors: true
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Check network readiness (CNI)
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: kube-system
    label_selectors:
      - "k8s-app=calico-node"
    kubeconfig: "{{ temp_kubeconfig }}"
  register: network_pods
  ignore_errors: true
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Check storage readiness
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    kubeconfig: "{{ temp_kubeconfig }}"
  register: storage_classes
  ignore_errors: true
  when: global_kubeconfig is defined
  delegate_to: localhost

- name: Process cluster nodes information
  set_fact:
    processed_nodes: "{{ processed_nodes + [node_info] }}"
  vars:
    node_info:
      name: "{{ item.metadata.name }}"
      status: "{{ item.status.conditions | selectattr('type', 'equalto', 'Ready') | map(attribute='status') | first | default('Unknown') }}"
      role: "{{ 'control-plane' if 'node-role.kubernetes.io/control-plane' in item.metadata.labels else 'worker' }}"
      version: "{{ item.status.nodeInfo.kubeletVersion | default('unknown') }}"
  loop: "{{ k8s_nodes.resources | default([]) }}"
  when: 
    - k8s_nodes is defined 
    - k8s_nodes.resources is defined
    - k8s_nodes.resources | length > 0
  delegate_to: localhost

- name: Process system pods information
  set_fact:
    processed_system_pods: "{{ processed_system_pods + [pod_info] }}"
  vars:
    pod_info:
      name: "{{ item.metadata.name }}"
      status: "{{ item.status.phase | default('Unknown') }}"
      namespace: "{{ item.metadata.namespace }}"
      ready: "{{ item.status.conditions | selectattr('type', 'equalto', 'Ready') | map(attribute='status') | first | default('False') }}"
  loop: "{{ k8s_system_pods.resources | default([]) }}"
  when: 
    - k8s_system_pods is defined 
    - k8s_system_pods.resources is defined
    - k8s_system_pods.resources | length > 0
  delegate_to: localhost

- name: Determine cluster status
  set_fact:
    cluster_status: >-
      {%- if processed_nodes | length > 0 -%}
        {%- set ready_nodes = processed_nodes | selectattr('status', 'equalto', true) | list -%}
        {%- if ready_nodes | length == processed_nodes | length -%}
          healthy
        {%- elif ready_nodes | length > 0 -%}
          partially_ready
        {%- else -%}
          unhealthy
        {%- endif -%}
      {%- else -%}
        unknown
      {%- endif -%}
  delegate_to: localhost

- name: Determine network readiness
  set_fact:
    network_ready: >-
      {%- if network_pods is defined and network_pods.resources is defined and network_pods.resources | length > 0 -%}
        {%- set running_pods = network_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list -%}
        {{ running_pods | length > 0 }}
      {%- else -%}
        false
      {%- endif -%}
  delegate_to: localhost

- name: Determine storage readiness
  set_fact:
    storage_ready: >-
      {%- if storage_classes is defined and storage_classes.resources is defined -%}
        {{ storage_classes.resources | length > 0 }}
      {%- else -%}
        false
      {%- endif -%}
  delegate_to: localhost

- name: Update Kubernetes summary data
  set_fact:
    kubernetes_summary:
      cluster_status: "{{ cluster_status }}"
      nodes: "{{ processed_nodes | default([]) }}"
      system_pods: "{{ processed_system_pods | default([]) }}"
      network_ready: "{{ network_ready | bool }}"
      storage_ready: "{{ storage_ready | bool }}"
  delegate_to: localhost

- name: Generate summary report
  include_tasks: "{{ playbook_dir }}/tasks/summary_tracker.yml"
  vars:
    generate_summary_report: true
    generate_k8s_summary_report: true
    should_save_summary: true

- name: Cleanup temporary kubeconfig directory
  file:
    path: "{{ temp_kubeconfig_dir.path }}"
    state: absent
  when: temp_kubeconfig_dir is defined
  ignore_errors: true
  delegate_to: localhost 
