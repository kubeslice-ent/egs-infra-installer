apiVersion: apps.nvidia.com/v1alpha1
kind: NIMService
metadata:
  name: {{ nim_service_name | default('meta-llama3-8b-instruct') }}
  namespace: {{ nim_service_namespace | default('nim') }}
{% if nim_service_labels is defined %}
  labels:
{% for key, value in nim_service_labels.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
spec:
{% if nim_service_env is defined %}
  env:
{% for env in nim_service_env %}
    - name: {{ env.name }}
      value: "{{ env.value }}"
{% endfor %}
{% endif %}
  runtimeClassName: {{ nim_service_runtime_class | default('nvidia') }}
{% if nim_service_tolerations is defined %}
  tolerations:
{% for toleration in nim_service_tolerations %}
    - key: "{{ toleration.key | default('nvidia.com/gpu') }}"
      operator: "{{ toleration.operator | default('Exists') }}"
      effect: "{{ toleration.effect | default('NoSchedule') }}"
{% if toleration.value is defined %}
      value: "{{ toleration.value }}"
{% endif %}
{% endfor %}
{% else %}
  tolerations:
    - key: "nvidia.com/gpu"
      operator: "Exists"
      effect: "NoSchedule"
{% endif %}
  image:
    repository: {{ nim_service_image_repository | default('nvcr.io/nim/meta/llama-3.1-8b-instruct') }}
    tag: {{ nim_service_image_tag | default('1.8.4') }}
    pullPolicy: {{ nim_service_image_pull_policy | default('IfNotPresent') }}
{% if nim_service_image_pull_secrets is defined %}
    pullSecrets:
{% for secret in nim_service_image_pull_secrets %}
      - {{ secret }}
{% endfor %}
{% else %}
    pullSecrets:
      - ngc-secret
{% endif %}
  authSecret: {{ nim_service_auth_secret | default('ngc-api-secret') }}
{% if nim_service_metrics is defined %}
  metrics:
    enabled: {{ nim_service_metrics.enabled | default(true) }}
{% if nim_service_metrics.service_monitor is defined %}
    serviceMonitor:
      additionalLabels:
{% for key, value in nim_service_metrics.service_monitor.additional_labels.items() %}
        {{ key }}: {{ value }}
{% endfor %}
{% endif %}
{% else %}
  metrics:
    enabled: true
    serviceMonitor:
      additionalLabels:
        release: prometheus
{% endif %}
  storage:
    nimCache:
      name: {{ nim_service_storage_cache_name | default('meta-llama3-8b-instruct') }}
      profile: {{ nim_service_storage_cache_profile | default('4f904d571fe60ff24695b5ee2aa42da58cb460787a968f1e8a09f5a7e862728d') }}
  replicas: {{ nim_service_replicas | default(1) }}
{% if nim_service_resources is defined %}
  resources:
{% if nim_service_resources.requests is defined %}
    requests:
{% for resource, value in nim_service_resources.requests.items() %}
      {{ resource }}: {{ value }}
{% endfor %}
{% endif %}
{% if nim_service_resources.limits is defined %}
    limits:
{% for resource, value in nim_service_resources.limits.items() %}
      {{ resource }}: {{ value }}
{% endfor %}
{% endif %}
{% else %}
  resources:
    limits:
      nvidia.com/gpu: 1
{% endif %}
  expose:
    service:
      type: {{ nim_service_expose_type | default('ClusterIP') }}
      port: {{ nim_service_expose_port | default(8000) }} 