---
# Define common SSH vars to be used by all tasks
- name: Set SSH connection facts
  set_fact:
    ssh_connection_vars:
      ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
      ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)

- name: Set initial environment variables
  shell: |
    export LC_ALL=C
    export LANG=C
  changed_when: false
  delegate_to: "{{ item.ansible_host }}"
  delegate_facts: true
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"

- name: Wait for any existing package management operations to complete
  shell: |
    echo "Checking for package management locks..."
    while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1 || fuser /var/lib/dpkg/lock >/dev/null 2>&1 || fuser /var/cache/apt/archives/lock >/dev/null 2>&1; do
      echo "Waiting for package management operations to complete..."
      sleep 15
    done
    echo "Package management locks are clear."
  args:
    executable: /bin/bash
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C
    LANG: C

- name: Update package cache for locale packages
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C
    LANG: C
  retries: 5
  delay: 30
  until: not ansible_failed | default(false)

- name: Install required locale packages
  apt:
    name: locales
    state: present
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C
    LANG: C
  retries: 5
  delay: 30
  until: not ansible_failed | default(false)

- name: Ensure C.UTF-8 locale is generated
  locale_gen:
    name: C.UTF-8
    state: present
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C
    LANG: C

- name: Set system-wide locale
  shell: |
    update-locale LC_ALL=C.UTF-8 LANG=C.UTF-8
  args:
    executable: /bin/bash
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C
    LANG: C

- name: Set environment variables for current execution
  set_fact:
    ansible_env:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"

- name: Update package cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
  retries: 5
  delay: 30
  until: not ansible_failed | default(false)

- name: Install UFW
  apt:
    name: ufw
    state: present
  become: true
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
  retries: 5
  delay: 30
  until: not ansible_failed | default(false)

- name: Allow Kubernetes API Server port
  ufw:
    rule: allow
    port: "6443"
    proto: tcp
    comment: "Kubernetes API Server"
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Allow etcd ports
  ufw:
    rule: allow
    port: "{{ item.0 }}"
    proto: tcp
    comment: "etcd"
  loop: "{{ ['2379', '2380'] | product(kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([])) | list }}"
  delegate_to: "{{ item.1.ansible_host }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.1.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Allow Kubelet API port
  ufw:
    rule: allow
    port: "10250"
    proto: tcp
    comment: "Kubelet API"
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Allow kube-scheduler port
  ufw:
    rule: allow
    port: "10251"
    proto: tcp
    comment: "kube-scheduler health/metrics"
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Allow kube-controller-manager port
  ufw:
    rule: allow
    port: "10252"
    proto: tcp
    comment: "kube-controller-manager health/metrics"
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Reload UFW
  ufw:
    state: reloaded
  delegate_to: "{{ item.ansible_host }}"
  loop: "{{ kubernetes_deployment.control_plane_nodes + kubernetes_deployment.worker_nodes | default([]) }}"
  when: kubernetes_deployment.enabled | default(false)
  vars:
    ansible_ssh_private_key_file: "{{ kubernetes_deployment.ssh_key_path }}"
    ansible_user: "{{ item.ansible_user | default(kubernetes_deployment.default_ansible_user) }}"
    kubernetes_deployment: "{{ hostvars['localhost']['kubernetes_deployment'] }}"
  environment:
    LC_ALL: C.UTF-8
    LANG: C.UTF-8 