apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ mcp_server_name }}
  namespace: {{ mcp_server_namespace }}
  labels:
    app: {{ mcp_server_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ mcp_server_name }}
  template:
    metadata:
      labels:
        app: {{ mcp_server_name }}
    spec:
      imagePullSecrets:
      - name: {{ mcp_server_image_pull_secret }}
      containers:
        - name: {{ mcp_server_name }}
          image: {{ mcp_server_image }}
          command:
            - python
            - '-m'
            - prometheus_mcp_server.main
          args:
            - '--transport'
            - http
            - '--port'
            - '{{ mcp_server_port }}'
          env:
            - name: PROMETHEUS_URL
              value: {{ mcp_server_prometheus_url }}
            - name: PROMETHEUS_USERNAME
              value: ""
            - name: PROMETHEUS_PASSWORD
              value: ""
            - name: TENANT_ID
              value: {{ mcp_server_tenant_id }}
          resources:
            limits:
              cpu: {{ mcp_server_resources.limits.cpu }}
              memory: {{ mcp_server_resources.limits.memory }}
            requests:
              cpu: {{ mcp_server_resources.requests.cpu }}
              memory: {{ mcp_server_resources.requests.memory }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
apiVersion: v1
kind: Service
metadata:
  name: {{ mcp_server_name }}
  namespace: {{ mcp_server_namespace }}
  labels:
    app: {{ mcp_server_name }}
spec:
  ports:
    - protocol: TCP
      port: {{ mcp_server_port }}
      targetPort: {{ mcp_server_port }}
  selector:
    app: {{ mcp_server_name }}
  type: NodePort
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
