# site.yml
# Master playbook for smartscaler-apps-installer
---
# Main playbook for cluster deployment
- name: Load global variables
  hosts: all
  gather_facts: false
  tasks:
    - name: Include user input variables
      include_vars:
        file: user_input.yml
        name: user_input

    - name: Set kubernetes_deployment fact
      set_fact:
        kubernetes_deployment: "{{ user_input.kubernetes_deployment }}"

- name: Prepare cluster nodes
  hosts: all
  gather_facts: true
  tasks:
    - name: Ensure required directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /etc/kubernetes/manifests
        - /etc/kubernetes/addons
      become: true
      when: kubernetes_deployment.enabled | default(false)

    - name: Copy MetalLB configuration
      template:
        src: templates/metallb-config.yml.j2
        dest: /etc/kubernetes/addons/metallb-config.yml
      become: true
      when: kubernetes_deployment.metallb.enabled | default(false)

    - name: Copy Nginx Ingress configuration
      template:
        src: templates/nginx-ingress-config.yml.j2
        dest: /etc/kubernetes/addons/nginx-ingress-config.yml
      become: true
      when: kubernetes_deployment.ingress_nginx.enabled | default(false)

- name: Import Kubespray cluster playbook
  import_playbook: kubespray/cluster.yml
  vars:
    ansible_sudo_pass: "{{ kubernetes_deployment.ansible_sudo_pass | default('') }}"

- name: Deploy Smart Scaler Components
  hosts: localhost
  gather_facts: true
  vars_files:
    - "{{ lookup('env', 'VARS_FILE', default='user_input.yml') }}"

  pre_tasks:
    - name: Check if vault file exists
      stat:
        path: group_vars/all/vault.yml
      register: vault_file

    - name: Include vault file if it exists
      include_vars:
        file: group_vars/all/vault.yml
      when: vault_file.stat.exists
      ignore_errors: true

    - name: Set NGC API key
      set_fact:
        ngc_api_key: "{{ ngc_api_key | default(lookup('env', 'NGC_API_KEY')) | default(vault_ngc_api_key | default('')) }}"

    - name: Set NGC Docker API key
      set_fact:
        ngc_docker_api_key: "{{ ngc_docker_api_key | default(lookup('env', 'NGC_DOCKER_API_KEY')) | default(vault_ngc_docker_api_key | default('')) }}"

    - name: Set Avesha Docker username
      set_fact:
        avesha_docker_username: "{{ avesha_docker_username | default(lookup('env', 'AVESHA_DOCKER_USERNAME')) | default(vault_avesha_docker_username | default('')) }}"

    - name: Set Avesha Docker password
      set_fact:
        avesha_docker_password: "{{ avesha_docker_password | default(lookup('env', 'AVESHA_DOCKER_PASSWORD')) | default(vault_avesha_docker_password | default('')) }}"

    - name: Debug variable values
      debug:
        msg: |
          NGC API Key: {{ 'set' if ngc_api_key else 'not set' }}
          NGC Docker API Key: {{ 'set' if ngc_docker_api_key else 'not set' }}
          Avesha Docker Username: {{ 'set' if avesha_docker_username else 'not set' }}
          Avesha Docker Password: {{ 'set' if avesha_docker_password else 'not set' }}

    - name: Verify required variables
      fail:
        msg: |
          The following required variables are not set:
          {% if not ngc_api_key %}
          - NGC_API_KEY
          {% endif %}
          {% if not ngc_docker_api_key %}
          - NGC_DOCKER_API_KEY
          {% endif %}
          {% if not avesha_docker_username %}
          - AVESHA_DOCKER_USERNAME
          {% endif %}
          {% if not avesha_docker_password %}
          - AVESHA_DOCKER_PASSWORD
          {% endif %}
          
          Please set these variables using one of:
          1. Environment variables
          2. Command line arguments (-e)
          3. Vault file (group_vars/all/vault.yml)
      when: not ngc_api_key or not ngc_docker_api_key or not avesha_docker_username or not avesha_docker_password

    - name: Show credential source
      debug:
        msg: >-
          Using NGC credentials from: 
          {%- if ngc_api_key == lookup('env', 'NGC_API_KEY') %} environment variables
          {%- else %} command line arguments or vault
          {%- endif %}
          
          Using Avesha Systems credentials from:
          {%- if avesha_docker_username == lookup('env', 'AVESHA_DOCKER_USERNAME') %} environment variables
          {%- else %} command line arguments or vault
          {%- endif %}

  tasks:
    - name: Validate prerequisites
      include_tasks: "tasks/validate_prerequisites.yml"
      when: validate_prerequisites.enabled | default(true)

    - name: Include execution order
      include_tasks: "tasks/process_execution_order.yml"
      vars:
        execution_vars:
          ngc_api_key: "{{ ngc_api_key }}"
          ngc_docker_api_key: "{{ ngc_docker_api_key }}"
          avesha_docker_username: "{{ avesha_docker_username }}"
          avesha_docker_password: "{{ avesha_docker_password }}"
      when: execution_order_enabled | default(true)
